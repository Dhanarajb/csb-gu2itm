{"version":3,"sources":["Navbar.js","itemData.js","redux/cart.js","Item.js","Cart.js","Checkout.js","App.js","redux/store.js","index.js"],"names":["Navbar","_jsxs","className","children","_jsx","NavLink","exact","to","style","color","textDecoration","marginRight","itemData","id","name","price","cart","createSlice","initialState","reducers","add","state","action","concat","_toConsumableArray","payload","inc","newState","map","e","amount","dec","remove","filter","reset","cartAction","actions","Item","useSelector","dispatch","useDispatch","addToCart","item","some","alert","_Fragment","marginTop","paddingBottom","borderBottom","onClick","bind","Cart","history","useHistory","deleteItem","length","width","margin","borderCollapse","_this","reduce","acc","cur","push","fontWeight","Checkout","_ref","cartItems","handleCustomerInfo","_useState","useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","phone","setPhone","onSubmit","event","preventDefault","htmlFor","type","value","onChange","target","required","App","Router","Switch","Route","path","component","store","configureStore","reducer","rootElement","document","getElementById","ReactDOM","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.c2c63208.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"navv\">\n      <NavLink\n        className=\"it\"\n        exact\n        to=\"/\"\n        style={{ color: \"#000\", textDecoration: \"none\", marginRight: \"20px\" }}\n      >\n        Item\n      </NavLink>\n      <NavLink\n        className=\"it\"\n        exact\n        to=\"/cart\"\n        style={{ color: \"#000\", textDecoration: \"none\", marginRight: \"20px\" }}\n      >\n        Cart\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Navbar;\n","export const itemData = [\n  {\n    id: 1,\n    name: \"Apple\",\n    price: 10\n  },\n  {\n    id: 2,\n    name: \"Banana\",\n    price: 12\n  },\n  {\n    id: 3,\n    name: \"Guava\",\n    price: 9\n  },\n  {\n    id: 4,\n    name: \"Water Mellon\",\n    price: 15\n  },\n  {\n    id: 5,\n    name: \"Lichi\",\n    price: 25\n  },\n  {\n    id: 6,\n    name: \"Cherry\",\n    price: 5\n  }\n];\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst cart = createSlice({\n  name: \"cart reducer\",\n  initialState,\n  reducers: {\n    add: (state, action) => {\n      return [...state, action.payload];\n    },\n\n    inc: (state, action) => {\n      const newState = state.map((e) => {\n        if (e.id === action.payload) {\n          e.amount++;\n        }\n        return e;\n      });\n      state = newState;\n    },\n\n    dec: (state, action) => {\n      const newState = state.map((e) => {\n        if (e.id === action.payload) {\n          if (e.amount > 1) {\n            e.amount--;\n          }\n        }\n        return e;\n      });\n      state = newState;\n    },\n\n    remove: (state, action) => {\n      const newState = state.filter((e) => {\n        return e.id !== action.payload;\n      });\n      return newState;\n    },\n\n    reset: () => {\n      return [];\n    }\n  }\n});\n\nexport const cartAction = cart.actions;\nexport default cart.reducer;\n","import React from \"react\";\nimport { itemData } from \"./itemData\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cartAction } from \"./redux/cart\";\n\nconst Item = () => {\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const addToCart = (item) => {\n    const isAdded = cart.some((e) => {\n      return e.id === item.id;\n    });\n\n    if (!isAdded) {\n      dispatch(\n        cartAction.add({\n          id: item.id,\n          name: item.name,\n          price: item.price,\n          amount: 1\n        })\n      );\n    } else {\n      alert(\"Already Added\");\n    }\n  };\n\n  return (\n    <>\n      {itemData.map((e) => {\n        return (\n          <div\n            key={e.id}\n            style={{\n              marginTop: \"50px\",\n              paddingBottom: \"50px\",\n              borderBottom: \"1px solid\"\n            }}\n          >\n            <h3>{e.name}</h3>\n            <p>{e.price}</p>\n            <button onClick={addToCart.bind(this, e)}>Add to cart</button>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cartAction } from \"./redux/cart\";\nimport \"./css/App.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Cart = () => {\n  const history = useHistory();\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const inc = (id) => {\n    dispatch(cartAction.inc(id));\n  };\n\n  const dec = (id) => {\n    dispatch(cartAction.dec(id));\n  };\n\n  const deleteItem = (id) => {\n    dispatch(cartAction.remove(id));\n  };\n\n  const deleteAll = () => {\n    dispatch(cartAction.reset());\n  };\n\n  const checkout = () => {\n    history.push(\"/checkout\");\n  };\n\n  return (\n    <>\n      {cart.length !== 0 ? (\n        <>\n          <table\n            style={{\n              width: \"100%\",\n              margin: \"30px 0\",\n              borderCollapse: \"collapse\"\n            }}\n          >\n            <tr>\n              <th>Id</th>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Total Price</th>\n              <th>Amount</th>\n              <th>Action</th>\n            </tr>\n            {cart.map((e) => {\n              return (\n                <tr>\n                  <td>{e.id}</td>\n                  <td>{e.name}</td>\n                  <td>{e.price}</td>\n                  <td>{e.price * e.amount}</td>\n                  <td>\n                    <button onClick={dec.bind(this, e.id)}>-</button> {e.amount}{\" \"}\n                    <button onClick={inc.bind(this, e.id)}>+</button>\n                  </td>\n                  <td>\n                    <button onClick={deleteItem.bind(this, e.id)}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </table>\n          <button onClick={deleteAll}>Remove All</button>\n          <h3>\n            Grand Total :{\" \"}\n            {cart.reduce((acc, cur) => acc + cur.price * cur.amount, 0)}\n          </h3>\n          <button className=\"btnn\" onClick={checkout}>\n            Checkout\n          </button>\n        </>\n      ) : (\n        <p style={{ fontWeight: \"bold\" }}>Empty Cart</p>\n      )}\n    </>\n  );\n};\n\nexport default Cart;\n","import React, { useState } from \"react\";\nimport { itemData } from \"./itemData\";\n\nconst Checkout = ({ cartItems, handleCustomerInfo }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const customerInfo = { firstName, lastName, email, phone };\n    // handleCustomerInfo(customerInfo);\n    alert(\"Your order is successfully done\");\n  };\n\n  return (\n    <div>\n      <h1 className=\"h1\">Checkout</h1>\n      {/* <table>\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {itemData.map((item) => (\n            <tr key={item.id}>\n              <td>{item.name}</td>\n              <td>${item.price}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table> */}\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"firstName\">First Name:</label>\n        <input\n          type=\"text\"\n          id=\"firstName\"\n          value={firstName}\n          onChange={(event) => setFirstName(event.target.value)}\n          required\n        />\n        <br />\n        <label htmlFor=\"lastName\">Last Name:</label>\n        <input\n          type=\"text\"\n          id=\"lastName\"\n          value={lastName}\n          onChange={(event) => setLastName(event.target.value)}\n          required\n        />\n        <br />\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          required\n        />\n        <br />\n        <label htmlFor=\"phone\">Phone:</label>\n        <input\n          type=\"tel\"\n          id=\"phone\"\n          value={phone}\n          onChange={(event) => setPhone(event.target.value)}\n          required\n        />\n        <br />\n        <button className=\"bt\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default Checkout;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport Item from \"./Item\";\nimport Cart from \"./Cart\";\nimport Checkout from \"./Checkout\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Item} />\n        <Route exact path=\"/cart\" component={Cart} />\n        <Route exact path=\"/checkout\" component={Checkout} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cart from \"./cart\";\n\nconst store = configureStore({\n  reducer: { cart }\n});\n\nexport default store;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}